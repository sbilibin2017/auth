version: "3.8"

volumes:
  db_data:
  cache_data:

services:
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    expose:
      - "${ZOOKEEPER_PORT}"

  kafka:
    image: 'bitnami/kafka:latest'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:${ZOOKEEPER_PORT}
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:${KAFKA_PORT}
      - ALLOW_PLAINTEXT_LISTENER=yes
    expose:
      - "${KAFKA_PORT}"
    depends_on:
      - zookeeper

  db:
    image: postgres:${POSTGRES_VERSION}    
    restart: always
    env_file:
      - .env 
    volumes:
      - db_data:/var/lib/postgresql/data/ 
    expose:
      - "${POSTGRES_PORT}"

  cache:
    image: redis:${REDIS_VERSION}
    restart: always
    env_file:
      - .env 
    volumes:
      - cache_data:/data
    expose:
      - "${REDIS_PORT}"

  app:
    build:
      context: .
      dockerfile: Dockerfile
    command: sh -c ./docker-entrypoint.sh
    env_file:
      - .env  
    volumes:
      - .:/app    
    expose:
      - "${APP_PORT}"
    depends_on:
      - kafka
      - db
      - cache

  nginx:
    image: nginx:${NGINX_VERSION}
    restart: always
    depends_on:
      - app    
    env_file:
      - .env  
    volumes:
      - ./nginx/etc/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/etc/nginx/conf.d/default.conf.tmp:/etc/nginx/conf.d/default.conf.tmp
    command: >
      /bin/bash -c "envsubst \"`for v in $$(compgen -v);do printf '$${%s} ' $$v;done`'\"
      < /etc/nginx/conf.d/default.conf.tmp
      > /etc/nginx/conf.d/default.conf
      && nginx -g 'daemon off;'"    
    ports:
      - ${NGINX_PORT}:${NGINX_PORT}